<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baizhi.mapper.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.baizhi.entity.Article">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="create_date" jdbcType="DATE" property="createDate"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>

    </resultMap>
    <sql id="Base_Column_List">
    id, title, author, create_date, content,status
  </sql>

    <!--根据分页查询所有-->
    <select id="selectAllByPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from article limit ${(page-1)*rows},#{rows}
    </select>
    <!--查询总条数-->
    <select id="selectTotalCount" resultType="Integer">
    select count(*) from article
  </select>


    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from article
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByKeys" parameterType="String">
        delete from article
        where id in
        <foreach collection="array" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>
    </delete>

    <insert id="insert" parameterType="com.baizhi.entity.Article">
    insert into article (id, title, author, 
      create_date, content,status
      )
    values (#{id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=DATE}, #{content,jdbcType=VARCHAR},#{status,jdbcType=VARCHAR}
      )
  </insert>


    <insert id="insertSelective" parameterType="com.baizhi.entity.Article">
        insert into article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=DATE},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="Article">
        update article
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=DATE},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                content = #{status,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.baizhi.entity.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=DATE},
      content = #{content,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>